apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: gke-test-2
    name: gke-test-2
  spec:
    allocateLoadBalancerNodePorts: true
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      targetPort: 8080
    selector:
      app: gke-test-2
    sessionAffinity: None
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
  spec:
    clusterIP: 10.0.48.1
    clusterIPs:
    - 10.0.48.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: gke-test-2
    name: gke-test-2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: gke-test-2
    template:
      metadata:
        labels:
          app: gke-test-2
      spec:
        containers:
        - image: us-central1-docker.pkg.dev/root-territory-384205/repository/gke-test-2:dns-857ea51-kai
          imagePullPolicy: IfNotPresent
          name: gke-test-2
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
kind: List
metadata:
  resourceVersion: ''
