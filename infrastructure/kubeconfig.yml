apiVersion: v1
items:
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: application
      annotations:
        kubernetes.io/ingress.class: gce
        kubernetes.io/ingress.allow-http: "true"
    spec:
      ingressClassName: gce
      defaultBackend:
        service:
          name: application
          port:
            number: 8080
  - apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      name: letsencrypt-staging
    spec:
      acme:
        email: coilysiren@gmail.com
        privateKeySecretRef:
          name: letsencrypt-staging
        server: https://acme-staging-v02.api.letsencrypt.org/directory
        solvers:
          - http01:
              ingress:
                name: application
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"ingress":true}'
      finalizers:
        - service.kubernetes.io/load-balancer-cleanup
      labels:
        app: application
      name: application
    spec:
      allocateLoadBalancerNodePorts: true
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - port: 80
          targetPort: 8080
      selector:
        app: application
      type: LoadBalancer
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: application
      name: application
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: application
      template:
        metadata:
          labels:
            app: application
        spec:
          containers:
            - image: us-central1-docker.pkg.dev/root-territory-384205/repository/gke-test-2:scale-2c87fae-kai
              name: application
              ports:
                - containerPort: 8080
kind: List
metadata:
  resourceVersion: ""
